#!/bin/bash
#############################################################
# <next few lines under version control, D O  N O T  E D I T>
# $Date: 2010-08-12 12:03:57 -0700 (Thu, 12 Aug 2010) $
# $Author$
# $Revision$
# $Id$
#############################################################

#############################################################
# F U N C T I O N S   S T A R T   H E R E
#############################################################
clean_on_exit( ) {
	logfile=$1
	exp_name=$2
	\rm -f /tmp/msg
	echo "last 50 lines of ... ${logfile}" >> /tmp/msg
	tail -n 50 ${logfile}                  >> /tmp/msg
	mutt -s "${exp_name} has stopped on host `hostname -s`" `whoami`@atmos.uw.edu < /tmp/msg
	exit
}

#############################################################
# M A I N   S C R I P T   S T A R T S   H E R E
#############################################################
# define experiment names and run types
exp_name="shear1.0_amu1.5"
run_type="diagnostics"
let run_number=1
let control_run_number=1
let perturbed_run_number=1

# Ensemble properties
let Ne=10000  # no. of ensemble members

# define local and remote experiment directories 
dir_expt_src="/home/disk/pvort/rahulm/sqg_experiments"
dir_expt_run="/home/disk/p/nobackup/rahulm/ALL_ETC/sqg_experiments"

# define experiment source, run and log directories 
dir_src=${dir_expt_src}/${exp_name}/${run_type}/src
dir_run=${dir_expt_run}/${exp_name}/${run_type}/run${run_number}
dir_run_control=${dir_expt_run}/${exp_name}/control/run${control_run_number}
dir_run_perturbed=${dir_expt_run}/${exp_name}/perturbed/run${perturbed_run_number}

# create run directories 
if [ -e ${dir_run} ]; then
	tmplog=/tmp/logfile
	\rm -f ${tmplog}; touch ${tmplog}
	echo "   ################################################"   >> ${tmplog}
	echo "   ${dir_run} exists"                                  >> ${tmplog}
	echo "   cannot continue, needs your attention, EXITING  "   >> ${tmplog}
	echo "   ################################################"   >> ${tmplog}
  echo "                                                   "   >> ${tmplog}
	clean_on_exit ${tmplog} ${exp_name}/${run_type}
else
	mkdir -p ${dir_run}
fi

logfile=${dir_run}/log_${run_type}_${run_number}
touch ${logfile}

echo "                                                             " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo " ${run_type} for experiment ${exp_name}                      " >> ${logfile}
echo " started at `date`                                           " >> ${logfile}
echo " on host `hostname -s`                                       " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "                                                             " >> ${logfile}

# Change to working directory
cd ${dir_run}

# Copy diagnostic files (sqg_diag.f90 and Makefile) from ${dir_src}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "                                   " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "copy sQG diagnostic files" >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
if [ -e ${dir_src}/fortran ]; then
  \cp -f ${dir_src}/fortran/Makefile       .
  \cp -f ${dir_src}/fortran/sqg_diag.f90   .
	echo "                   " >> ${logfile}
	echo "   compile sqg_diag" >> ${logfile}
	make sQG_diag              >> ${logfile} 2>&1
	if [ ! -e sQG_diag ]; then
		echo "   ################################################" >> ${logfile}
	  echo "   sQG_diag was not compiled" >> ${logfile}
		echo "   ################################################" >> ${logfile}
		clean_on_exit ${logfile} ${exp_name}/${run_type}
	fi
	echo "   ################################################" >> ${logfile}
else
	echo "   ################################################" >> ${logfile}
  echo "   ${dir_src}/fortran needs to exist" >> ${logfile}
	echo "   ################################################" >> ${logfile}
	clean_on_exit ${logfile} ${exp_name}/${run_type}
fi

# Link all control and perturbed run files
let ie=1
while [ $ie -le $Ne ]; do

	let emem='100000 + ie'
	emem=`echo ${emem} | cut -b2-`

	\ln -sf ${dir_run_control}/smat_C_${emem}.nc   .
	\ln -sf ${dir_run_perturbed}/smat_P_${emem}.nc .
	
	let ie='ie+1'
done

# Run the diagnostic utility
echo "                " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "launch sQG_diag " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "                " >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
(time ./sQG_diag ${Ne}) >> ${logfile} 2>&1
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo "                " >> ${logfile}

# Clean up and remove the linked smat_C_*.nc and smat_P_*.nc files
\rm -f ${dir_run}/smat_C_*.nc
\rm -f ${dir_run}/smat_P_*.nc

echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}
echo " ${run_type} for experiment ${exp_name}"                       >> ${logfile}
echo " completed at `date`"                                          >> ${logfile}
echo " on host `hostname -s`"                                        >> ${logfile}
echo "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" >> ${logfile}

# Upon Exit, send email and clean
clean_on_exit ${logfile} ${exp_name}/${run_type}
